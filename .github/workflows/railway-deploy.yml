name: CI/CD - Railway

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          cache: true

      - name: Run tests
        run: go test ./...

      - name: Set up Node.js (for Railway CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Require deployment secrets
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
        run: |
          set -euo pipefail
          missing=()
          if [ -z "${RAILWAY_TOKEN:-}" ]; then missing+=("RAILWAY_TOKEN"); fi
          if [ -z "${RAILWAY_SERVICE_ID:-}" ]; then missing+=("RAILWAY_SERVICE_ID"); fi
          if [ ${#missing[@]} -gt 0 ]; then
            printf 'Missing required GitHub secrets: %s\n' "${missing[*]}" >&2
            exit 1
          fi

      - name: Sync environment variables to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
          RAILWAY_ENVIRONMENT_ID: ${{ secrets.RAILWAY_ENVIRONMENT_ID }}
          DATABASE_URL_SECRET: ${{ secrets.RAILWAY_DATABASE_URL }}
          JWT_SECRET_SECRET: ${{ secrets.RAILWAY_JWT_SECRET }}
          JWT_ISSUER_SECRET: ${{ secrets.RAILWAY_JWT_ISSUER }}
        run: |
          set -euo pipefail
          declare -a kvs=()
          if [ -n "${DATABASE_URL_SECRET:-}" ]; then
            kvs+=("DATABASE_URL=${DATABASE_URL_SECRET}")
          fi
          if [ -n "${JWT_SECRET_SECRET:-}" ]; then
            kvs+=("JWT_SECRET=${JWT_SECRET_SECRET}")
          fi
          if [ -n "${JWT_ISSUER_SECRET:-}" ]; then
            kvs+=("JWT_ISSUER=${JWT_ISSUER_SECRET}")
          fi

          if [ ${#kvs[@]} -eq 0 ]; then
            echo "No variables provided; skipping sync."
            exit 0
          fi
          for kv in "${kvs[@]}"; do
            args=(variables set "${kv}")
            if [ -n "${RAILWAY_SERVICE_ID:-}" ]; then
              args+=(--service "${RAILWAY_SERVICE_ID}")
            fi
            if [ -n "${RAILWAY_ENVIRONMENT_ID:-}" ]; then
              args+=(--environment "${RAILWAY_ENVIRONMENT_ID}")
            fi
            railway "${args[@]}"
          done

      - name: Validate Railway variables
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
          RAILWAY_ENVIRONMENT_ID: ${{ secrets.RAILWAY_ENVIRONMENT_ID }}
        run: |
          set -euo pipefail
          list_args=(variables list)
          if [ -n "${RAILWAY_SERVICE_ID:-}" ]; then
            list_args+=(--service "${RAILWAY_SERVICE_ID}")
          fi
          if [ -n "${RAILWAY_ENVIRONMENT_ID:-}" ]; then
            list_args+=(--environment "${RAILWAY_ENVIRONMENT_ID}")
          fi

          vars_output="$(railway "${list_args[@]}")"
          required=(DATABASE_URL JWT_SECRET)
          missing=()
          for key in "${required[@]}"; do
            if ! printf '%s\n' "${vars_output}" | grep -E "^[[:space:]]*${key}[[:space:]]" >/dev/null; then
              missing+=("${key}")
            fi
          done

          if [ ${#missing[@]} -gt 0 ]; then
            printf 'Railway environment is missing required variables: %s\n' "${missing[*]}" >&2
            printf 'Add them via Railway Variables UI or provide GitHub secrets (RAILWAY_DATABASE_URL / RAILWAY_JWT_SECRET) so this workflow can sync them automatically.\n' >&2
            exit 1
          fi

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
          RAILWAY_ENVIRONMENT_ID: ${{ secrets.RAILWAY_ENVIRONMENT_ID }}
        run: |
          set -euo pipefail
          args=(up)
          if [ -n "${RAILWAY_SERVICE_ID:-}" ]; then
            args+=(--service "${RAILWAY_SERVICE_ID}")
          fi
          if [ -n "${RAILWAY_ENVIRONMENT_ID:-}" ]; then
            args+=(--environment "${RAILWAY_ENVIRONMENT_ID}")
          fi
          railway "${args[@]}"
